@page
@model Cinemo.Pages.Admin.Ticket.CreateModel

@{
  Layout = "_AdminLayout";
}

@section Styles {
  <link rel="stylesheet" href="~/css/book-ticket.css" />
}

@section Scripts {
  <script src="~/js/book-ticket.js"></script>
  @* TODO disable click *@
  <script>
    $(function() {
      $('.seat-available').off('click')

      let parsedQuery = new URLSearchParams(window.location.search);

      function reloadWithQuery() {
        window.location.search = parsedQuery.toString();
      }

      
      $('#showtime-select').on('change', function (e) {
        parsedQuery.set('showtimeId', this.value);

        reloadWithQuery();
      })
    })
      

  </script>
}

<div class="container">
  <a href="/Admin/Tickets">
    <i class="fas fa-angle-left mr-1"></i>Back to Tickets
  </a>

  <div class="display-4">
    Create Ticket
  </div>

  <hr class="my-4">

  <form method="post">
    <partial name="Shared/_ErrorAlert" model="@Model.ErrorMessage" />
    
    <div class="form-group required">
      <label for="theater-select">Show Time</label>
      <select asp-for="@Model.CreateDto.ShowTimeId" asp-items="@Model.ShowTimeSelectList" required id="showtime-select"
        class="selectpicker d-block col-6 p-0" title="Choose Showtime" data-style="custom-select" data-size="5"
        data-live-search="true" data-live-search-normalize="true" data-live-search-placeholder="Search...">
      </select>
    </div>

    <div class="form-group required">
      <label for="theater-select">Ticket Type</label>
      <select asp-for="@Model.CreateDto.TicketTypeId" asp-items="@Model.TicketTypeSelectList" required
        id="ticket-type-select" class="selectpicker d-block col-6 p-0" title="Choose Ticket Type"
        data-style="custom-select" data-size="5" data-live-search="true" data-live-search-normalize="true"
        data-live-search-placeholder="Search...">
      </select>
    </div>

    <div class="form-group required">
      <label for="theater-select">User</label>
      <select asp-for="@Model.CreateDto.UserId" asp-items="@Model.UserSelectList" required id="user-select"
        class="selectpicker d-block col-6 p-0" title="Choose User" data-style="custom-select" data-size="5"
        data-live-search="true" data-live-search-normalize="true" data-live-search-placeholder="Search...">
      </select>
    </div>

    <div class="form-group col-9 p-0 required">
      <label>Seat</label>
      <input class="form-control" type="text" asp-for="@Model.CreateDto.Seat" placeholder="Enter seat" required>
    </div>

    <div class="room d-flex flex-column justify-content-start">
      @if (Model.Showtime != null){
      <div>

          <div class="d-flex mb-4">
            <div class="d-flex mr-4 align-items-center">
              <div class="seat seat-available-legend mr-1"></div>
              Available
            </div>

            <div class="d-flex mr-4 align-items-center">
              <div class="seat seat-chosen-legend mr-1"></div>
              Choosing
            </div>

            <div class="d-flex align-items-center">
              <div class="seat seat-sold-legend mr-1"></div>
              Sold
            </div>
          </div>

          

          <div style="width: fit-content">
            <div class="screen pb-1 mb-5 text-center w-50 mx-auto">
              Screen
            </div>

            
            @for (var row = 1; row <= Model.Showtime.Room.NumRow; row++) {
              var rowChar = (char)(row + 64);

              <div class="d-flex mb-2">
                <div class="seat mr-3">
                  @rowChar
                </div>
            
                @for (var col = 1; col <= Model.Showtime.Room.NumCol; col++) {
                  string thisSeat = @rowChar.ToString() +'-'+ @col.ToString();

                  var thisSeatIsSold = Model.BookedTickets.FirstOrDefault(ticket => ticket.Seat == thisSeat) != null;

                  var seatClass = thisSeatIsSold ? "seat-sold" : "seat-available";

                  <div class="mr-1 seat @seatClass"
                       data-seat="@thisSeat"
                       title=""></div>
                }

                <div class="seat ml-3">
                  @rowChar
                </div>
              </div>
            }

            <div class="d-flex mt-3 justify-content-center">
              @for (var col = 1; col <= Model.Showtime.Room.NumCol; col++) {
                <div class="seat mr-1">
                  @col
                </div>
              }
            </div>
            
          </div>
      </div>

}
        </div>

    <div class="form-group">
      <button type="submit" class="btn btn-primary">
        Create
      </button>
    </div>
  </form>
</div>